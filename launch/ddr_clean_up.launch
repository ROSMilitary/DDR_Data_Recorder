<!--******************************************************************************

"Distribution A: Approved for public release; distribution unlimited. OPSEC #4046"

PROJECT: DDR

 PACKAGE         :
 ORIGINAL AUTHOR :
 MODIFIED DATE   :
 MODIFIED BY     :
 REVISION        :

 Copyright (c) 2020 DCS Corporation

 Unlimited Rights assigned to the U.S. Government

 This material may be reproduced by or for the U.S Government pursuant
 to the copyright license under the clause at DFARS 252.227-7013.  This
 notice must appear in all copies of this file and its derivatives.
******************************************************************************

Copyright (c) 2019-2020 U.S. Federal Government (in countries where recognized)
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.



-->






<launch>

	<!-- Edit the directory to store bags within the home directory -->
	<param name="directory" value="~/ddr_bags" />
	<!-- The xml file defining all topics -->
	<param name="topicXML" value="/kml.xml" />
	<!-- Split Yoinker (bag deletion) will be disabled when this value is set to true -->
	<param name="testEvent" value="false" />
	<!-- The size of each bag split (in seconds) -->
	<param name="splitSize" value="5" />
	<!-- set's the overlap between mode switches (in seconds) -->
	<param name="overlap" value="5" />
	<!-- The minimum duration of bag files to save (in seconds). Maximum will be shadowSize += 2(splitSize) -->
	<param name="shadowSize" type="double" value="180" />
	<!-- How long to sleep (in seconds) before replublishing an unexpectedModeChange as a topicGroup change -->
	<param name="umcTimer" value="15" />
	<!-- How often to check for new bag creation (in seconds) -->
	<param name="genTimer" value="5" />

	<!--USER SET TOPICS FOR YOUR AUTONOMY SYSTEM-->
	<!-- GPS topic that outputs a GPSFix message -->
	<param name="gpsTopic" value="" />
	<!-- Your autonomy mode topic that outputs vehicle modes -->
	<param name="modeTopic" value="" />
	<!-- Your gear topic that outputs gear changes -->
	<param name="gearTopic" value="" />


	<node pkg="ddr_data_recorder" name="ddr_api" type="api.py"/>

  <node pkg="ddr_data_recorder" name="split_manager" type="manager.py" output="screen"/>

	<!--node pkg="ddr_data_recorder" name="dynamic_recorder" type="dynamic_recorder.py" output="screen"/-->

	<node pkg="ddr_data_recorder" name="toInfinity" type="toInfinity.py"/>

	<node pkg="ddr_data_recorder" name="toInfinityer" type="toInfinityer.py"/>

	<!--node pkg="ddr_data_recorder" name="mileage_counter" type="mileage.py"/-->

	<node pkg="ddr_data_recorder" name="mode_state_bridge" type="mode_state_bridge_example.py" output="screen"/>

	<!--node pkg="ddr_data_recorder" name="rosparam_capture" type="rosparam_capture.py" output="screen"/-->

  <!--node pkg="ddr_data_recorder" name="msg_capture" type="msg_capture.py" output="screen"/-->

</launch>
